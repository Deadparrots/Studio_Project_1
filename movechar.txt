void moveCharacter()
{
	bool bSomethingHappened = false;
	if (g_dBounceTime > g_dElapsedTime)
		return;
	fstream myfile("map.txt");
	// Updating the location of the character based on the key press
	// providing a beep sound whenver we shift the character
	if ((g_abKeyPressed[K_UP] || g_abKeyPressed[K_DOWN] || g_abKeyPressed[K_LEFT] || g_abKeyPressed[K_RIGHT]) && (g_eWeaponState != Hold || Weapons[currentWeapon].Clip == 0))
	{
		shootfailsound = 1;
		bSomethingHappened = true;
	}
	if (Weapons[currentWeapon].Clip > 0)
	{
		if (g_abKeyPressed[K_UP] && g_eWeaponState == Hold)
		{
			g_eWeaponState = FireUp;
			if (g_abKeyPressed[K_W])
				g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y - 1;
			else
				g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y;
			g_weapon.m_cLocation.X = g_sChar.m_cLocation.X;
			shootsound++;
			Weapons[currentWeapon].Clip--;
			bSomethingHappened = true;
		}
		if (g_abKeyPressed[K_DOWN] && g_eWeaponState == Hold)
		{
			g_eWeaponState = FireDown;
			if (g_abKeyPressed[K_S])
				g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y + 1;
			else
				g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y;
			g_weapon.m_cLocation.X = g_sChar.m_cLocation.X;
			shootsound++;
			Weapons[currentWeapon].Clip--;
			bSomethingHappened = true;
		}
		if (g_abKeyPressed[K_LEFT] && g_eWeaponState == Hold)
		{
			g_eWeaponState = FireLeft;
			if (g_abKeyPressed[K_A])
				g_weapon.m_cLocation.X = g_sChar.m_cLocation.X - 1;
			else
				g_weapon.m_cLocation.X = g_sChar.m_cLocation.X;
			g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y;
			shootsound++;
			Weapons[currentWeapon].Clip--;
			bSomethingHappened = true;
		}
		if (g_abKeyPressed[K_RIGHT] && g_eWeaponState == Hold)
		{
			g_eWeaponState = FireRight;
			if (g_abKeyPressed[K_D])
				g_weapon.m_cLocation.X = g_sChar.m_cLocation.X + 1;
			else
				g_weapon.m_cLocation.X = g_sChar.m_cLocation.X;
			g_weapon.m_cLocation.Y = g_sChar.m_cLocation.Y;
			shootsound++;
			Weapons[currentWeapon].Clip--;
			bSomethingHappened = true;
		}
	}
	char * buffer2 = new char[0];
	if (g_eWeaponState == FireUp)
	{
		myfile.seekg(g_weapon.m_cLocation.X + g_weapon.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ')
		{
			g_weapon.m_cLocation.Y--;
			bSomethingHappened = true;
			g_shootdist++;
		}
		else
			g_shootdist = g_shootmaxdist;
	}
	if (g_eWeaponState == FireDown)
	{
		myfile.seekg(g_weapon.m_cLocation.X + g_weapon.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ')
		{
			g_weapon.m_cLocation.Y++;
			bSomethingHappened = true;
			g_shootdist++;
		}
		else
			g_shootdist = g_shootmaxdist;
	}
	if (g_eWeaponState == FireLeft)
	{
		myfile.seekg(g_weapon.m_cLocation.X + g_weapon.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ')
		{
			g_weapon.m_cLocation.X--;
			bSomethingHappened = true;
			g_shootdist++;
		}
		else
			g_shootdist = g_shootmaxdist;
	}
	if (g_eWeaponState == FireRight)
	{
		myfile.seekg(g_weapon.m_cLocation.X + g_weapon.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ')
		{
			g_weapon.m_cLocation.X++;
			bSomethingHappened = true;
			g_shootdist++;
		}
		else
			g_shootdist = g_shootmaxdist;
	}


	if (g_shootdist >= g_shootmaxdist)
	{
		g_eWeaponState = Hold;
		g_weapon.m_cLocation.X = 10;
		g_weapon.m_cLocation.Y = 2;
		g_shootdist = 0;
	}

	if (g_abKeyPressed[K_W] && g_sChar.m_cLocation.Y > 0)
	{
		myfile.seekg(g_sChar.m_cLocation.X + g_sChar.m_cLocation.Y * 82 - 82);
		char * buffer = new char[0];
		myfile.read(buffer, 1);
		if (buffer[0] == ' ')
		{
			//Beep(1440, 30);
			g_sChar.m_cLocation.Y--;
			bSomethingHappened = true;
		}
	}
	if (g_abKeyPressed[K_A] && g_sChar.m_cLocation.X > 0)
	{
		myfile.seekg(g_sChar.m_cLocation.X + g_sChar.m_cLocation.Y * 82 - 1);
		char * buffer = new char[0];
		myfile.read(buffer, 1);
		if (buffer[0] == ' ')
		{
			//Beep(1440, 30);
			g_sChar.m_cLocation.X--;
			bSomethingHappened = true;
		}
	}
	if (g_abKeyPressed[K_S] && g_sChar.m_cLocation.Y < g_Console.getConsoleSize().Y - 1)
	{
		myfile.seekg(g_sChar.m_cLocation.X + g_sChar.m_cLocation.Y * 82 + 82);
		char * buffer = new char[0];
		myfile.read(buffer, 1);
		if (buffer[0] == ' ')
		{
			//Beep(1440, 30);
			g_sChar.m_cLocation.Y++;
			bSomethingHappened = true;
		}
	}
	if (g_abKeyPressed[K_D] && g_sChar.m_cLocation.X < g_Console.getConsoleSize().X - 1)
	{
		myfile.seekg(g_sChar.m_cLocation.X + g_sChar.m_cLocation.Y * 82 + 1);
		char * buffer = new char[0];
		myfile.read(buffer, 1);
		if (buffer[0] == ' ')
		{
			//Beep(1440, 30);
			g_sChar.m_cLocation.X++;
			bSomethingHappened = true;
		}
	}
	if (
		(g_sChar.m_cLocation.X == g_enemy1.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy1.m_cLocation.Y && g_enemy1.m_bActive == false) ||
		(g_sChar.m_cLocation.X == g_enemy2.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy2.m_cLocation.Y && g_enemy2.m_bActive == false) ||
		(g_sChar.m_cLocation.X == g_enemy3.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy3.m_cLocation.Y && g_enemy3.m_bActive == false) ||
		(g_sChar.m_cLocation.X == g_enemy4.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy4.m_cLocation.Y && g_enemy4.m_bActive == false) ||
		(g_sChar.m_cLocation.X == g_enemy5.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy5.m_cLocation.Y && g_enemy5.m_bActive == false) ||
		(g_sChar.m_cLocation.X == g_enemy6.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy6.m_cLocation.Y && g_enemy6.m_bActive == false)
		)
	{
		reload();
		reloadsound += 2;
	}
	if (
		(g_sChar.m_cLocation.X == g_enemy1.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy1.m_cLocation.Y && g_enemy1.m_bActive == true) ||
		(g_sChar.m_cLocation.X == g_enemy2.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy2.m_cLocation.Y && g_enemy2.m_bActive == true) ||
		(g_sChar.m_cLocation.X == g_enemy3.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy3.m_cLocation.Y && g_enemy3.m_bActive == true) ||
		(g_sChar.m_cLocation.X == g_enemy4.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy4.m_cLocation.Y && g_enemy4.m_bActive == true) ||
		(g_sChar.m_cLocation.X == g_enemy5.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy5.m_cLocation.Y && g_enemy5.m_bActive == true) ||
		(g_sChar.m_cLocation.X == g_enemy6.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy6.m_cLocation.Y && g_enemy6.m_bActive == true)
		)
	{
		g_sChar.m_bActive = false;
		bSomethingHappened = true;
	}
	if (g_sChar.m_cLocation.X == g_enemy1.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy1.m_cLocation.Y)
	{
		g_enemy1.m_bActive = false;
		g_enemy1.m_cLocation.X = 0;
		g_enemy1.m_cLocation.Y = 0;
	}
	if (g_sChar.m_cLocation.X == g_enemy2.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy2.m_cLocation.Y)
	{
		g_enemy2.m_bActive = false;
		g_enemy2.m_cLocation.X = 0;
		g_enemy2.m_cLocation.Y = 0;
	}
	if (g_sChar.m_cLocation.X == g_enemy3.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy3.m_cLocation.Y)
	{
		g_enemy3.m_bActive = false;
		g_enemy3.m_cLocation.X = 0;
		g_enemy3.m_cLocation.Y = 0;
	}
	if (g_sChar.m_cLocation.X == g_enemy4.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy4.m_cLocation.Y)
	{
		g_enemy4.m_bActive = false;
		g_enemy4.m_cLocation.X = 0;
		g_enemy4.m_cLocation.Y = 0;
	}
	if (g_sChar.m_cLocation.X == g_enemy5.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy5.m_cLocation.Y)
	{
		g_enemy5.m_bActive = false;
		g_enemy5.m_cLocation.X = 0;
		g_enemy5.m_cLocation.Y = 0;
	}
	if (g_sChar.m_cLocation.X == g_enemy6.m_cLocation.X && g_sChar.m_cLocation.Y == g_enemy6.m_cLocation.Y)
	{
		g_enemy6.m_bActive = false;
		g_enemy6.m_cLocation.X = 0;
		g_enemy6.m_cLocation.Y = 0;
	}
	size_t rate = 100 / (stages + 1) + 24;
	switch (rand() % rate)
	{
	case 0:
		myfile.seekg(g_enemy1.m_cLocation.X + g_enemy1.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy1.m_bActive == true)
			g_enemy1.m_cLocation.X++;
		break;
	case 1:
		myfile.seekg(g_enemy1.m_cLocation.X + g_enemy1.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy1.m_bActive == true)
			g_enemy1.m_cLocation.Y++;
		break;
	case 2:
		myfile.seekg(g_enemy1.m_cLocation.X + g_enemy1.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy1.m_bActive == true)
			g_enemy1.m_cLocation.X--;
		break;
	case 3:
		myfile.seekg(g_enemy1.m_cLocation.X + g_enemy1.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy1.m_bActive == true)
			g_enemy1.m_cLocation.Y--;
		break;
	case 4:
		myfile.seekg(g_enemy2.m_cLocation.X + g_enemy2.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy2.m_bActive == true)
			g_enemy2.m_cLocation.X++;
		break;
	case 5:
		myfile.seekg(g_enemy2.m_cLocation.X + g_enemy2.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy2.m_bActive == true)
			g_enemy2.m_cLocation.Y++;
		break;
	case 6:
		myfile.seekg(g_enemy2.m_cLocation.X + g_enemy2.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy2.m_bActive == true)
			g_enemy2.m_cLocation.X--;
		break;
	case 7:
		myfile.seekg(g_enemy2.m_cLocation.X + g_enemy2.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy2.m_bActive == true)
			g_enemy2.m_cLocation.Y--;
		break;
	case 8:
		myfile.seekg(g_enemy3.m_cLocation.X + g_enemy3.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy3.m_bActive == true)
			g_enemy3.m_cLocation.X++;
		break;
	case 9:
		myfile.seekg(g_enemy3.m_cLocation.X + g_enemy3.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy3.m_bActive == true)
			g_enemy3.m_cLocation.Y++;
		break;
	case 10:
		myfile.seekg(g_enemy3.m_cLocation.X + g_enemy3.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy3.m_bActive == true)
			g_enemy3.m_cLocation.X--;
		break;
	case 11:
		myfile.seekg(g_enemy3.m_cLocation.X + g_enemy3.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy3.m_bActive == true)
			g_enemy3.m_cLocation.Y--;
		break;
	case 12:
		myfile.seekg(g_enemy4.m_cLocation.X + g_enemy4.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy4.m_bActive == true)
			g_enemy4.m_cLocation.X++;
		break;
	case 13:
		myfile.seekg(g_enemy4.m_cLocation.X + g_enemy4.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy4.m_bActive == true)
			g_enemy4.m_cLocation.Y++;
		break;
	case 14:
		myfile.seekg(g_enemy4.m_cLocation.X + g_enemy4.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy4.m_bActive == true)
			g_enemy4.m_cLocation.X--;
		break;
	case 15:
		myfile.seekg(g_enemy4.m_cLocation.X + g_enemy4.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy4.m_bActive == true)
			g_enemy4.m_cLocation.Y--;
		break;
	case 16:
		myfile.seekg(g_enemy5.m_cLocation.X + g_enemy5.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy5.m_bActive == true)
			g_enemy5.m_cLocation.X++;
		break;
	case 17:
		myfile.seekg(g_enemy5.m_cLocation.X + g_enemy5.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy5.m_bActive == true)
			g_enemy5.m_cLocation.Y++;
		break;
	case 18:
		myfile.seekg(g_enemy5.m_cLocation.X + g_enemy5.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy5.m_bActive == true)
			g_enemy5.m_cLocation.X--;
		break;
	case 19:
		myfile.seekg(g_enemy5.m_cLocation.X + g_enemy5.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy5.m_bActive == true)
			g_enemy5.m_cLocation.Y--;
		break;
	case 20:
		myfile.seekg(g_enemy6.m_cLocation.X + g_enemy6.m_cLocation.Y * 82 + 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy6.m_bActive == true)
			g_enemy6.m_cLocation.X++;
		break;
	case 21:
		myfile.seekg(g_enemy6.m_cLocation.X + g_enemy6.m_cLocation.Y * 82 + 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy6.m_bActive == true)
			g_enemy6.m_cLocation.Y++;
		break;
	case 22:
		myfile.seekg(g_enemy6.m_cLocation.X + g_enemy6.m_cLocation.Y * 82 - 1);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy6.m_bActive == true)
			g_enemy6.m_cLocation.X--;
		break;
	case 23:
		myfile.seekg(g_enemy6.m_cLocation.X + g_enemy6.m_cLocation.Y * 82 - 82);
		myfile.read(buffer2, 1);
		if (buffer2[0] == ' ' && g_enemy6.m_bActive == true)
			g_enemy6.m_cLocation.Y--;
		break;
	}

	myfile.close();


	if (g_abKeyPressed[K_SPACE])
	{
		g_sChar.m_bActive = true;
		bSomethingHappened = true;
	}

	if (bSomethingHappened)
	{
		// set the bounce time to some time in the future to prevent accidental triggers
		g_dBounceTime = g_dElapsedTime + 0.07; // 125ms should be enough
	}
}